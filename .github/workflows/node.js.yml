# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: CodeNow Deployment

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "master" ]

jobs:
  # CodeQuality:
  #     runs-on: ubuntu-latest
  #     environment: dev194725


  #     steps:
  #     - uses: actions/checkout@v4
  #       with:
  #           fetch-depth: 0
  #     - name: Official SonarQube Scan
  #     # You may pin to the exact commit or the version.
  #     # uses: SonarSource/sonarqube-scan-action@aecaf43ae57e412bd97d70ef9ce6076e672fe0a9
  #       uses: SonarSource/sonarqube-scan-action@v2.3.0
  #       with:
  #         # Additional arguments to the sonar-scanner
  #         args: -Dsonar.projectKey=ambsoerensen_CodeNow -Dsonar.organization=ambsoerensen
  #       env:
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #         SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  #     #with:
  #       # Additional arguments to the sonar-scanner
  #      # args: # optional
  #       # Set the sonar.projectBaseDir analysis property
  #       #projectBaseDir: # optional, default is .
  #     - name: ServiceNow DevOps Sonar
  #     # You may pin to the exact commit or the version.
  #     # uses: ServiceNow/servicenow-devops-sonar@3cdbf4fd4d7d5b677f150702a20a3613fe9962af
  #       uses: ServiceNow/servicenow-devops-sonar@v3.1.0
  #       with:
  #         # ServiceNow Instance URL
  #         instance-url: "${{vars.INSTANCENAME}}.service-now.com"
  #         # Devops Integration User Name
  #         devops-integration-user-name: "${{vars.USER_NAME}}"
  #         # Devops Integration User Password
  #         devops-integration-user-password: "${{ secrets.MYPS }}"
  #         # Devops Security Token
  #         #devops-integration-token: # optional
  #         # Orchestration Tool Id
  #         tool-id: a69123a68304d610e92f9ea6feaad3f0
  #         # Github Context
  #         context-github: ${{ toJSON(github) }}
  #         # Display Name of the Job
  #         job-name: CodeNow Deployment
  #         # Sonar Host URL
  #         sonar-host-url: https://sonarcloud.io/
  #         # Sonar Project Key
  #         sonar-project-key: ambsoerensen_CodeNow
  #         # Sonar Organization Key
  #         # sonar-org-key: # optional
   
  Test:
    runs-on: windows-latest
    environment: dev194725
    #needs: ["CodeQuality"]
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js 20.x and test
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    - run: npm ci
    - run: npm test --instance="${{vars.INSTANCENAME}}" --user="${{vars.USER_NAME}}"  --secret="${{ secrets.MYPS }}"
    # You may pin to the exact commit or the version.
    # uses: ServiceNow/servicenow-devops-test-report@ed89e7474df937fa41dbb1c387e5c54cd075fdcf
    # - name: ServiceNow DevOps Unit Test Results
    #   uses: ServiceNow/servicenow-devops-test-report@v3.1.0
    #   with:
    #     # Devops Integration User Name
    #     devops-integration-user-name: ${{vars.USER_NAME}}
    #     # Devops Integration User Password
    #     devops-integration-user-password: ${{secrets.MYPS }}
    #     # Devops Security Token
    #     #devops-integration-token: # optional
    #     # ServiceNow Instance Name
    #     instance-url: ${{vars.INSTANCENAME}}.service-now.com
    #     # Orchestration Tool Id
    #     tool-id: 3560923583581a50e92f9ea6feaad355
    #     # Job Name
    #     job-name: Test
    #     # Github Context
    #     context-github: ${{ toJSON(github) }}
    #     # JUnit xml report file name with path
    #     xml-report-filename: testResults.xml
    #     # GitHub Custom Action
    #     test-type: XUnit
  Deploy:
    name: Deploy CodeNow
    runs-on: windows-latest
    environment: dev194725
    # needs: ["Test","CodeQuality"]
    needs: ["Test"]
    steps:
      - name: ServiceNow DevOps Change Automation
      # You may pin to the exact commit or the version.
      # uses: ServiceNow/servicenow-devops-change@373e092812580f05105089c20129e6efe347c8e5
        uses: ServiceNow/servicenow-devops-change@v4.0.0
        with:
          # ServiceNow Instance URL
          instance-url: ${{vars.INSTANCENAME}}.service-now.com
          # Devops Integration User Name
          devops-integration-user-name: ${{vars.USER_NAME}}
          # Devops Integration User Password
          devops-integration-user-password: ${{secrets.MYPS}}
          # Devops Integration Token
          #devops-integration-token: # optional
          # Orchestration Tool Id
          tool-id: 3560923583581a50e92f9ea6feaad355
          # Display Name of the Job
          # Github Context
          context-github: ${{ toJSON(github) }}
          # Display Name of the Job
          job-name: 'ServiceNow DevOps Change'
          change-request: '{"attributes":{"requested_by":{"name": "Test User"},"assignment_group":{"name": "Change Approval Team"},"priority": "2","comments": "This is a sample pipeline script to be added in your change step","work_notes": "Update this to work_notes","start_date": "2023-09-07 11:59:59","end_date": "2023-09-09 11:59:59"}}'
          # You can specify the requested_by attribute either with name or sys_id. Example: "requested_by":{"name": "Test User"} or "requested_by": "62826bf03710200044e0bfc8bcbe5df1"
          # You can specify the assignment_group attribute either with name or sys_id. Example: "assignment_group":{"name": "Change Approval Team"} or "assignment_group": "5f721d93c0a8010e015533746de18bf9"
          # start_date: This is the planned start date
          # end_date: This is the planned end date
      - name: Deploy
        run: echo "Deployment successfull"
